spring:
    datasource:
        type: com.alibaba.druid.pool.DruidDataSource
        driverClassName: com.mysql.jdbc.Driver
        druid:
            first:  #数据源1
                url: jdbc:mysql://192.168.10.2:3306/xxwb31?allowMultiQueries=true&useUnicode=true&characterEncoding=UTF-8&useSSL=false
                username: xxwb3
                password: xxwb3
            second:  #数据源2
                url: jdbc:mysql://192.168.10.2:3306/xxwb31?allowMultiQueries=true&useUnicode=true&characterEncoding=UTF-8&useSSL=false
                username: xxwb3
                password: xxwb3
            initial-size: 10
            max-active: 100
            min-idle: 10
            max-wait: 60000
            pool-prepared-statements: true
            max-pool-prepared-statement-per-connection-size: 20
            time-between-eviction-runs-millis: 60000
            min-evictable-idle-time-millis: 300000
            validation-query: SELECT 1 FROM DUAL
            test-while-idle: true
            test-on-borrow: false
            test-on-return: false
            stat-view-servlet:
                enabled: true
                url-pattern: /druid/*
                login-username: renlei
                login-password: renlei524
            filter:
                stat:
                    log-slow-sql: true
                    slow-sql-millis: 1000
                    merge-sql: true
                wall:
                    config:
                        multi-statement-allow: true
    #kafka:
        #bootstrap-servers: 192.168.10.2:9092
        #auto-offset-reset: earliest
        #enable-auto-commit: false
        #consumer:
          #group-id: scxxwb-admin
          #spring.kafka.consumer.key-deserializer: org.apache.kafka.common.serialization.BytesDeserializer
          #value-deserializer: org.apache.kafka.common.serialization.BytesDeserializer
          #max-poll-records: 100
        #listener:
          #concurrency: 4
    redis:
        database: 0
        host: 192.168.10.2
        port: 6379
        password: redis    # 密码（默认为空）
        timeout: 6000ms  # 连接超时时长（毫秒）
        jedis:
            pool:
                max-active: 1000  # 连接池最大连接数（使用负值表示没有限制）
                max-wait: -1ms      # 连接池最大阻塞等待时间（使用负值表示没有限制）
                max-idle: 10      # 连接池中的最大空闲连接
                min-idle: 5       # 连接池中的最小空闲连接


scxxwb:
    redis:
        open: true  # 是否开启redis缓存  true开启   false关闭
    shiro:
        redis: true # true表示shiro session存到redis里，需要开启redis，才会生效【分布式场景】
    ftp:
        url: 192.168.10.245
        port: 21
        user-name: root
        password: xxwb1234
        merchantPath: /static/image
        appPath: /static/appPkg
        vyicooPath: /static/image
        goodsPath: /static/image
        noticePath: /static/image
    nginx:
        merchantPath: http://192.168.10.245:8686
        appPath: http://192.168.10.245:8686
        vyicooPath: http://192.168.10.245:8686
        goodsPath: http://192.168.10.245:8686
        noticePath: http://192.168.10.245:8686
    socket:
        host: 192.168.10.2
        port: 8082
    payPath: http://1mk6535653.iok.la/Pay/Trade/Pay?sn=
    vyicooUploadPath:
    elasticJob:
        regCenter:
            serverList: 192.168.10.244:2181,192.168.10.245:2181,192.168.10.246:2181
            namespace: scxxwb-admin
        url: http://192.168.10.244:8899
    elasticSearch:
        url: http://192.168.10.244:9200/_plugin/head
        esUserName: renlei
        esPassword: renlei524
